import discord
import datetime

def create_private_tournament_embed(tournament):
    """
    Create an embed for a private tournament announcement.
    
    Args:
        tournament: Dictionary with tournament data from the database
        
    Returns:
        discord.Embed: Formatted embed for the tournament
    """
    embed = discord.Embed(
        title=f"üî´ **{tournament['name']}**",
        description=f"–ß–∞—Å—Ç–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä –Ω–∞ {tournament['weapon_type']}!",
        color=0x9B59B6  # Purple for private tournaments
    )
    
    # Format tournament date
    if isinstance(tournament['tournament_date'], str):
        tournament_date = tournament['tournament_date']
    else:
        tournament_date = tournament['tournament_date'].strftime("%d.%m.%Y, %H:%M")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ID —Ç—É—Ä–Ω–∏—Ä–∞ –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    embed.add_field(name="ID –¢—É—Ä–Ω–∏—Ä–∞", value=f"#{tournament['id']}", inline=True)
    embed.add_field(name="–î–∞—Ç–∞", value=tournament_date, inline=True)
    embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∏", value=f"0/{tournament['max_participants']}", inline=True)
    
    if tournament['entry_fee'] > 0:
        embed.add_field(name="–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å", value=f"{tournament['entry_fee']}$ (–ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É)", inline=False)
    
    embed.add_field(name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä", value=f"<@{tournament['creator_id']}> ({tournament['creator_name']})", inline=False)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞ —Å ID –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–∞—Ö
    embed.set_footer(text=f"–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç—Ç–∏–º —Ç—É—Ä–Ω–∏—Ä–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID: {tournament['id']}")
    
    return embed

def create_public_tournament_embed(tournament):
    """
    Create an embed for a public tournament announcement.
    
    Args:
        tournament: Dictionary with tournament data from the database
        
    Returns:
        discord.Embed: Formatted embed for the tournament
    """
    embed = discord.Embed(
        title=f"üèÜ **{tournament['name']}**",
        description=f"–ü—É–±–ª–∏—á–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä –º–µ–∂–¥—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏!",
        color=0xE67E22  # Orange for public tournaments
    )
    
    # Format tournament date
    if isinstance(tournament['tournament_date'], str):
        tournament_date = tournament['tournament_date']
    else:
        tournament_date = tournament['tournament_date'].strftime("%d.%m.%Y, %H:%M")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ID —Ç—É—Ä–Ω–∏—Ä–∞ –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    embed.add_field(name="ID –¢—É—Ä–Ω–∏—Ä–∞", value=f"#{tournament['id']}", inline=True)
    embed.add_field(name="–î–∞—Ç–∞", value=tournament_date, inline=True)
    embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—É", value=str(tournament['participants_per_team']), inline=True)
    
    if tournament['entry_fee'] > 0:
        embed.add_field(name="–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å", value=f"{tournament['entry_fee']}$ (–ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É)", inline=False)
    
    embed.add_field(name="–ü—Ä–∞–≤–∏–ª–∞", value=tournament['rules'], inline=False)
    embed.add_field(name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä", value=f"<@{tournament['creator_id']}> ({tournament['creator_name']})", inline=False)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞ —Å ID –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–∞—Ö
    embed.set_footer(text=f"–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç—Ç–∏–º —Ç—É—Ä–Ω–∏—Ä–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID: {tournament['id']}")
    
    return embed

def create_tournament_notification_embed(tournament):
    """
    Create an embed for tournament notification.
    
    Args:
        tournament: Dictionary with tournament data from the database
        
    Returns:
        discord.Embed: Formatted embed for the notification
    """
    if tournament['type'] == 'private':
        color = 0x9B59B6  # Purple for private tournaments
    else:
        color = 0xE67E22  # Orange for public tournaments
    
    embed = discord.Embed(
        title=f"‚è∞ –¢—É—Ä–Ω–∏—Ä —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è: {tournament['name']}",
        description="–î–æ –Ω–∞—á–∞–ª–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω–µ–µ 15 –º–∏–Ω—É—Ç!",
        color=color
    )
    
    # Format tournament date
    if isinstance(tournament['tournament_date'], str):
        tournament_date = tournament['tournament_date']
    else:
        tournament_date = tournament['tournament_date'].strftime("%d.%m.%Y, %H:%M")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ID —Ç—É—Ä–Ω–∏—Ä–∞ –∏ –¥–∞—Ç—ã
    embed.add_field(name="ID –¢—É—Ä–Ω–∏—Ä–∞", value=f"#{tournament['id']}", inline=True)
    embed.add_field(name="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è", value=tournament_date, inline=True)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞ —Å ID –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–∞—Ö
    embed.set_footer(text=f"–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç—Ç–∏–º —Ç—É—Ä–Ω–∏—Ä–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID: {tournament['id']}")
    
    return embed

def create_match_result_embed(match, score_team1, score_team2):
    """
    Create an embed for match results.
    
    Args:
        match: Dictionary with match data from the database
        score_team1: Score for team 1
        score_team2: Score for team 2
        
    Returns:
        discord.Embed: Formatted embed for the match results
    """
    embed = discord.Embed(
        title=f"üèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–∞: {match['tournament_name']}",
        description=f"–ú–∞—Ç—á #{match['id']} –∑–∞–≤–µ—Ä—à–µ–Ω!",
        color=0xF1C40F  # Gold for results
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º ID —Ç—É—Ä–Ω–∏—Ä–∞ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    embed.add_field(name="ID –¢—É—Ä–Ω–∏—Ä–∞", value=f"#{match['tournament_id']}", inline=True)
    embed.add_field(name="–†–∞—É–Ω–¥", value=f"{match.get('round', '?')}", inline=True)
    
    # Determine if this is a team match or player match
    if match.get('team1_name') and match.get('team2_name'):
        # Team match
        embed.add_field(name=match['team1_name'], value=str(score_team1), inline=True)
        embed.add_field(name="VS", value="-", inline=True)
        embed.add_field(name=match['team2_name'], value=str(score_team2), inline=True)
        
        # Determine winner
        if score_team1 > score_team2:
            embed.add_field(name="–ü–æ–±–µ–¥–∏—Ç–µ–ª—å", value=match['team1_name'], inline=False)
            winner_id = match.get('team1_id', None)
            winner_type = '–ö–æ–º–∞–Ω–¥–∞'
        elif score_team2 > score_team1:
            embed.add_field(name="–ü–æ–±–µ–¥–∏—Ç–µ–ª—å", value=match['team2_name'], inline=False)
            winner_id = match.get('team2_id', None)
            winner_type = '–ö–æ–º–∞–Ω–¥–∞'
        else:
            embed.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç", value="–ù–∏—á—å—è", inline=False)
            winner_id = None
            winner_type = None
    else:
        # Player match
        player1_name = f"<@{match['player1_id']}>"
        player2_name = f"<@{match['player2_id']}>"
        
        embed.add_field(name=player1_name, value=str(score_team1), inline=True)
        embed.add_field(name="VS", value="-", inline=True)
        embed.add_field(name=player2_name, value=str(score_team2), inline=True)
        
        # Determine winner
        if score_team1 > score_team2:
            embed.add_field(name="–ü–æ–±–µ–¥–∏—Ç–µ–ª—å", value=player1_name, inline=False)
            winner_id = match.get('player1_id', None)
            winner_type = '–ò–≥—Ä–æ–∫'
        elif score_team2 > score_team1:
            embed.add_field(name="–ü–æ–±–µ–¥–∏—Ç–µ–ª—å", value=player2_name, inline=False)
            winner_id = match.get('player2_id', None) 
            winner_type = '–ò–≥—Ä–æ–∫'
        else:
            embed.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç", value="–ù–∏—á—å—è", inline=False)
            winner_id = None
            winner_type = None
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–º —Ä–∞—É–Ω–¥–µ
    if winner_id:
        embed.add_field(name="–°–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥", value=f"{winner_type} ID {winner_id} –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥", inline=False)
    
    # Add notes if available
    if match.get('notes') and match['notes'].strip():
        embed.add_field(name="–ó–∞–º–µ—Ç–∫–∏", value=match['notes'], inline=False)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞ —Å ID —Ç—É—Ä–Ω–∏—Ä–∞ –∏ –º–∞—Ç—á–∞
    embed.set_footer(text=f"–¢—É—Ä–Ω–∏—Ä #{match['tournament_id']} | –ú–∞—Ç—á #{match['id']}")
    
    return embed
